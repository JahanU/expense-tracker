[{"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/index.js":"1","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/App.js":"2","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/Expenses.js":"3","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpenseItem.js":"4","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpenseItemDate.js":"5","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/ui/Card.js":"6","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/newExpenses/NewExpense.js":"7","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/newExpenses/NewExpenseForm.js":"8","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expensesFilter/ExpenseFilter.js":"9","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpensesList.js":"10"},{"size":142,"mtime":1638206094778,"results":"11","hashOfConfig":"12"},{"size":1084,"mtime":1638479101530,"results":"13","hashOfConfig":"12"},{"size":888,"mtime":1638480730856,"results":"14","hashOfConfig":"12"},{"size":615,"mtime":1638481215487,"results":"15","hashOfConfig":"12"},{"size":540,"mtime":1638476537670,"results":"16","hashOfConfig":"12"},{"size":219,"mtime":1638270228608,"results":"17","hashOfConfig":"12"},{"size":919,"mtime":1638541661302,"results":"18","hashOfConfig":"12"},{"size":2079,"mtime":1638540878771,"results":"19","hashOfConfig":"12"},{"size":759,"mtime":1638478998099,"results":"20","hashOfConfig":"12"},{"size":500,"mtime":1638481056395,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16gmiud",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/index.js",[],["47","48"],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/App.js",[],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/Expenses.js",["49"],"import ExpenseItem from './ExpenseItem';\nimport Card from '../ui/Card';\nimport './Expenses.css';\nimport ExpenseFilter from '../expensesFilter/ExpenseFilter';\nimport ExpensesList from './ExpensesList';\nimport { useState } from 'react';\n\nfunction Expenses(props) {\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    const onExpenseFilterHandler = (filteredYear) => {\n        setFilteredYear(filteredYear);\n    };\n\n    const filteredExpenses = props.expenses.filter((expense) =>\n        expense.date.getFullYear().toString() === filteredYear);\n\n    return (\n        <div>\n            <Card className='expenses'>\n                <ExpenseFilter selectedYear={filteredYear} onExpenseFilter={onExpenseFilterHandler} />\n                <ExpensesList selectedYear={filteredYear} expenses={filteredExpenses} />\n            </Card>\n        </div>\n    );\n}\n\nexport default Expenses;\n","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpenseItem.js",[],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpenseItemDate.js",[],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/ui/Card.js",[],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/newExpenses/NewExpense.js",["50"],"import './NewExpense.css';\nimport NewExpenseForm from './NewExpenseForm';\nimport react, { useState } from 'react';\n\nfunction NewExpense(props) {\n    const [showForm, setShowForm] = useState(false);\n\n    const saveExpenseHandler = (enteredExpenseData) => {\n        const expenseData = {\n            id: Math.random().toString(),\n            ...enteredExpenseData\n        }\n        props.onAddNewExpense(expenseData);\n        setShowForm(false);\n    }\n\n    const addNewExpenseButtonHandler = () => {\n        setShowForm((prevState) => {\n            return !prevState;\n        });\n    }\n\n    return (\n        <div className='new-expense'>\n            {!showForm && <NewExpenseForm onSaveExpenseData={saveExpenseHandler} onCancelNewExpense={addNewExpenseButtonHandler} />}\n            {showForm && <button onClick={addNewExpenseButtonHandler}> Add New Expense</button>}\n        </div >\n    );\n}\n\nexport default NewExpense;\n","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/newExpenses/NewExpenseForm.js",[],"/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expensesFilter/ExpenseFilter.js",["51"],"import './ExpenseFilter.css';\n\nfunction ExpenseFilter(props) {\n\n    const dropdownChangeHandler = (event) => {\n        let { name, value } = event.target;\n        props.onExpenseFilter(value);\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter-control'>\n                <label>Filter By Year</label>\n                <select value={props.selectedYear} onChange={dropdownChangeHandler}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n}\n\nexport default ExpenseFilter;","/Users/jahanulhaque/Code/Learning-React/expense-tracker/src/components/expenses/ExpensesList.js",["52"],"import React, { useState } from 'react'\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nfunction ExpensesList(props) {\n\n    if (props.expenses.length === 0) {\n        return <h2 className='no-expenses'> No Expenses found for {props.selectedYear} </h2>\n    }\n\n    return (\n        <ul className='expenses-list'>\n            {props.expenses.map((expense) =>\n                <ExpenseItem key={expense.id} expense={expense} />)}\n        </ul>\n    );\n}\n\nexport default ExpensesList;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":6,"column":15,"nodeType":"59","messageId":"60","endLine":6,"endColumn":19},{"ruleId":"57","severity":1,"message":"63","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'ExpenseItem' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'name' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]